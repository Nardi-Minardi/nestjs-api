version: '3.8'

services:
  db:
    image: postgres:14
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./docker-compose/pgsql:/var/lib/postgresql/data
    ports:
      - "8001:5432"
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    restart: always
    env_file: .env
    ports:
      - "6001:6379"
    volumes:
      - ./docker-compose/redis:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - backend

  app:
    image: yourdockerhubusername/yourappname:latest
    container_name: nestjs_app
    restart: always
    env_file: .env
    depends_on:
      - db
      - redis
    ports:
      - "3000:3000"
    volumes:
      - ./uploads/images:/usr/src/app/uploads/images
    networks:
      - backend

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker-compose/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docker-compose/nginx/logs:/var/log/nginx
      - ./uploads/images:/usr/src/app/uploads/images
    depends_on:
      - app
    networks:
      - backend

networks:
  backend:
    driver: bridge
